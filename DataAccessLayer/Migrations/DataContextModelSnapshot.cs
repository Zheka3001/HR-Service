// <auto-generated />
using System;
using DataAccessLayer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccessLayer.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("DataAccessLayer.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("longtext");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("Login")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Admin",
                            LastName = "Default",
                            Login = "admin",
                            PasswordHash = new byte[] { 28, 93, 86, 109, 230, 193, 118, 169, 242, 221, 102, 65, 54, 53, 133, 176, 215, 147, 87, 97, 216, 101, 127, 87, 220, 158, 144, 91, 52, 204, 131, 44, 109, 191, 253, 212, 97, 216, 128, 111, 249, 86, 210, 103, 116, 17, 172, 63, 159, 226, 202, 109, 72, 13, 220, 185, 60, 204, 122, 136, 201, 117, 225, 116 },
                            PasswordSalt = new byte[] { 184, 87, 74, 151, 145, 39, 13, 78, 130, 28, 212, 9, 155, 108, 28, 92, 128, 253, 141, 223, 76, 78, 28, 123, 234, 161, 106, 211, 51, 170, 78, 183, 13, 164, 200, 173, 195, 124, 91, 246, 4, 1, 229, 47, 219, 26, 212, 123, 55, 228, 223, 211, 139, 173, 68, 100, 135, 179, 201, 90, 248, 65, 41, 245, 227, 205, 41, 105, 221, 244, 80, 137, 47, 18, 214, 242, 28, 103, 58, 69, 203, 121, 127, 41, 235, 226, 28, 70, 164, 74, 9, 230, 17, 105, 68, 78, 131, 193, 169, 22, 255, 28, 89, 87, 215, 67, 192, 119, 222, 199, 124, 194, 248, 46, 112, 14, 106, 139, 197, 178, 187, 128, 127, 183, 15, 185, 212, 144 },
                            Role = "Admin"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
